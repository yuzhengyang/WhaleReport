@model Waka.Plugin.Chart.Model.ChartModel
@{
    Layout = null;
    string canvasId = Guid.NewGuid().ToString();
    string labels = Model.GetLabels();
    string datas = Model.GetDatas();
    string colors = "";
    for (int i = 0; i < Model.DataSets.Count; i++)
    { colors += "randomColor(),"; }
}

<canvas id="@canvasId"></canvas>
<script>
    $(document).ready(function () {
        var config = {
            type: 'pie',
            data: {
                datasets: [{
                    label: ["1", "2", "3", "4"],
                    data: [@(new HtmlString(datas))],
                    backgroundColor: [@(new HtmlString(colors))],
                }],
                labels: [@(new HtmlString(labels))]
            },
            legend: {
                position: 'right',
            },
            options: {
                responsive: true, 
                tooltips: {
                    enabled: true,
                    titleMarginBottom: 0,
                    callbacks: {
                        title: function (tooltipItems, data) { 
                            var title = '';
                            var labels = data.labels;
                            var labelCount = labels ? labels.length : 0;

                            if (tooltipItems.length > 0) {
                                var item = tooltipItems[0];

                                if (item.xLabel) {
                                    title = item.xLabel;
                                } else if (labelCount > 0 && item.index < labelCount) {
                                    title = labels[item.index];
                                }
                            }
                            return title;
                        },
                        label: function (tooltipItem, data) {
                            return;
                        },
                    },
                },
            },
        };
        var ctx = $("#@canvasId").get(0).getContext("2d");
        new Chart(ctx, config);
    });
</script>