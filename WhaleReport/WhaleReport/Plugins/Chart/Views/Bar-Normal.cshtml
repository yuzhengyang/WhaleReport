@model Waka.Plugin.Chart.Model.ChartModel
@{
    Layout = null;
    string canvasId = Guid.NewGuid().ToString();
    string labels = Model.GetLabels();
    string datas = Model.GetDatas();
    string colors = "";
    for (int i = 0; i < Model.DataSets.Count; i++)
    { colors += "randomColor(),"; }
}

<canvas id="@canvasId"></canvas>
<script>
    $(document).ready(function () {
        var ctx = $("#@canvasId").get(0).getContext("2d");
        window.myBar = Chart.Bar(ctx, {
            data: {
                labels: [@(new HtmlString(labels))],
                datasets: [{
                    label: @(new HtmlString(Model.Label)) ,
                    backgroundColor: [@(new HtmlString(colors))],
                    data: [@(new HtmlString(datas))]
                }]
            },
            options: {
                legend: {
                    display: false,
                },
                responsive: true,
                hoverMode: 'label',
                hoverAnimationDuration: 400,
                stacked: false,
                title: {
                    display: false,
                    text: "Chart.js Bar Chart - Multi Axis"
                },
                scales: {
                    yAxes: [{
                        type: "linear", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                        display: true,
                        position: "left",
                        ticks: {
                            beginAtZero: true
                        }
                    }],
                },
                tooltips: {
                    enabled: true,
                    titleMarginBottom: 0,
                    callbacks: {
                        title: function (tooltipItems, data) {
                            var title = '';
                            var labels = data.labels;
                            var labelCount = labels ? labels.length : 0;

                            if (tooltipItems.length > 0) {
                                var item = tooltipItems[0];

                                if (item.xLabel) {
                                    title = item.xLabel;
                                } else if (labelCount > 0 && item.index < labelCount) {
                                    title = labels[item.index];
                                }
                            }
                            return title;
                        },
                    },
                },
            }
        });
    });
</script>